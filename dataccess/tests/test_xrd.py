import pytest
import os
from dataccess import xrd
import numpy as np
from dataccess import utils
from dataccess import database

def test_main():
    result = xrd.main(['quad2'], ['evaltest'], bgsub = False)
    assert utils.make_hashable(result)  == 'b136a34113bc311a5f2eadc039d99f65aeb17aa8'
    patterns, imarrays = result
    assert np.all(np.isclose(patterns[0][1][200:300],
        np.array([-79374607.49017288, -77817647.80032034, -77855272.07332674,
               -77916101.13773941, -76861747.02394336, -76467256.26471315,
               -75512079.07030755, -74893971.01764366, -74386072.98927219,
               -73509984.44541058, -72448580.46060658, -72793111.53926462,
               -72213677.51695451, -72133059.37496495, -71319591.0598093 ,
               -70999107.2313243 , -70802999.94647297, -70741803.95761555,
               -70555451.66592821, -71218030.09558858, -70340581.25984283,
               -70139968.17355368, -70418304.26683147, -71007567.22285528,
               -71428994.84472527, -70897868.81909172, -71647511.53230329,
               -70869754.17435838, -71699199.50068431, -71121897.78516568,
               -70636840.537267  , -70830622.79436491, -70329080.06774311,
               -71249758.87936813, -70819536.85679318, -70998732.90372869,
               -70524665.86809835, -70418318.40033922, -70392474.41316806,
               -70375794.0472151 , -71704894.47369123, -70970383.64748777,
               -70716194.05974498, -71891886.95591982, -70279758.25440633,
               -71235482.71336167, -70629815.91448805, -70930504.57885714,
               -70834699.03131942, -70669173.86236896, -70890502.96758871,
               -71028968.08388884, -70822154.99020675, -70682997.10340819,
               -70630299.40945274, -71152195.66382623, -70684771.02945584,
               -70378345.60901734, -70822379.64987439, -70390289.88507465,
               -71379372.07561995, -70354002.61748105, -70920064.72152466,
               -69790501.20674179, -70309710.18916291, -70981388.21886702,
               -70168916.95141199, -71104400.42149636, -70681256.48918435,
               -70190893.18822247, -71298953.61280771, -71177222.73119186,
               -70495172.12594211, -70699483.76858024, -70819386.33233963,
               -70614767.55374154, -71035551.79604486, -71329403.93527646,
               -71004274.37994851, -70421702.03284588, -70789825.67272939,
               -70645221.73747459, -71269168.45057008, -70897956.51527749,
               -71250120.6586833 , -72087561.17802428, -71314285.91778024,
               -71209184.89296986, -70858773.9733588 , -71018059.49116069,
               -70250562.04458201, -71533216.95662698, -71946780.73908733,
               -70907650.68267165, -71284923.98416622, -70728922.64337397,
               -71553187.70479648, -71291849.67295772, -71605275.24386655,
               -71522111.15533812])))

    result2 = xrd.main(['quad2'], ['evaltest'], bgsub = True, compound_list=['Fe3O4'])
    target2 =\
        np.array([ 1098067.47544578,  1072481.10969062,   308843.1232714 ,
                -328819.06439096,   -50101.82426203,  -347690.83327733,
                -279919.80676854,   112812.57148512,  -434528.86240345,
                 221368.45915011,   608938.06233229,  -402763.48579531,
                 182694.14793034,  -807830.31950037,    71389.86863471,
                -229104.76199943,  -232130.22104807,   -71825.16957247,
                -166792.24328566,  -275165.97311402,  -103753.60237671,
                 423240.86044817,   -37662.74003197,  -631094.20532822,
                -799726.86945052,  -662455.42052826,  -862169.05154647,
                -813294.18840489,  -856271.04863608,  -340836.78856932,
                -234058.69237895,  -242854.43217403,    98887.39214928,
                -372199.11116589,  -426683.2530489 ,  -339819.45657522,
                  -9646.48944394,    57374.94884731,   556453.17476951,
                 -33112.86549198,  -707537.44319501,  -582473.42262232,
                -243229.6555098 ,  -631159.74230618,   216827.319282  ,
                -222715.41732824,  -418266.53294503,  -480930.03198139,
                 518966.88699561,  -151215.67762141,   124813.32317499,
                -499381.51132878,  -314506.6797817 ,   125112.28013051,
                 -77482.88804749,   -76221.68020535,    60499.51651724,
                 375873.66446953,  -112039.96314605,   -58719.87991119,
                -557086.74399952,  -191740.70208167,  -281487.12907552,
                 854353.69458753,    -2516.76065076,  -214336.18392858,
                 304415.61443102,  -359185.39524518,  -222613.77994596,
                  83861.40871396,  -267762.56993171,  -504858.25499769,
                 185381.27744055,    91625.78492962,  -315933.00970687,
                 269896.44899733,  -140964.79115807,  -329249.97075412,
                -210778.24176425,   221291.5386102 ,     6261.17813374,
                -130571.47463379,  -255474.48683231,   131490.34490868,
                -367487.58608663,  -917830.47708034,  -593189.70790248,
                -116436.06399724,   116666.19941442,   134338.4350361 ,
                 746738.78620104,  -150970.54709373,  -270481.82776637,
                 159365.60522763,  -193691.75491775,   196806.11897791,
                -174685.76400483,   121829.96070798,  -250061.45871442,
                -108115.12021064])
    assert np.all(np.isclose(result2[0][0][1][200:300], target2))

    result3 = xrd.main(['quad2'], ['evaltest', 'goodratio'], bgsub = True, compound_list=['Fe3O4'])
    assert np.all(np.isclose(result3[0][0][1][200:300], result2[0][0][1][200:300]))
    return result


def test_mecana_xrd():
    import test_mecana
    test_mecana.reset()
    os.system('mecana.py -n xrd quad2 evaltest -b -c Fe3O4')
    db_output = list(database.collections_lookup['session_cache'].find({}))[0]
    assert np.all(np.isclose(db_output['data'][1][200:210],
        [1098067.4754457767, 1072481.1096906231, 308843.12327139836,
        -328819.0643909628, -50101.82426202637, -347690.833277326,
        -279919.8067685431, 112812.57148511676, -434528.86240345164, 221368.45915011165]))

    from dataccess import mecana_main
    import sys
    sys.argv = 'mecana.py -n xrd quad2 evaltest -b -c Fe3O4'.split()
    with pytest.raises(SystemExit):
        mecana_main.main()
